{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///home/ubuntu/stish/src/hooks/use-toast.ts"],"sourcesContent":["\"use client\"\n\n// Inspired by react-hot-toast library\nimport * as React from \"react\"\n\nimport type {\n  ToastActionElement,\n  ToastProps,\n} from \"@/components/ui/toast\"\n\nconst TOAST_LIMIT = 1\nconst TOAST_REMOVE_DELAY = 1000000\n\ntype ToasterToast = ToastProps & {\n  id: string\n  title?: React.ReactNode\n  description?: React.ReactNode\n  action?: ToastActionElement\n}\n\nconst actionTypes = {\n  ADD_TOAST: \"ADD_TOAST\",\n  UPDATE_TOAST: \"UPDATE_TOAST\",\n  DISMISS_TOAST: \"DISMISS_TOAST\",\n  REMOVE_TOAST: \"REMOVE_TOAST\",\n} as const\n\nlet count = 0\n\nfunction genId() {\n  count = (count + 1) % Number.MAX_SAFE_INTEGER\n  return count.toString()\n}\n\ntype ActionType = typeof actionTypes\n\ntype Action =\n  | {\n      type: ActionType[\"ADD_TOAST\"]\n      toast: ToasterToast\n    }\n  | {\n      type: ActionType[\"UPDATE_TOAST\"]\n      toast: Partial<ToasterToast>\n    }\n  | {\n      type: ActionType[\"DISMISS_TOAST\"]\n      toastId?: ToasterToast[\"id\"]\n    }\n  | {\n      type: ActionType[\"REMOVE_TOAST\"]\n      toastId?: ToasterToast[\"id\"]\n    }\n\ninterface State {\n  toasts: ToasterToast[]\n}\n\nconst toastTimeouts = new Map<string, ReturnType<typeof setTimeout>>()\n\nconst addToRemoveQueue = (toastId: string) => {\n  if (toastTimeouts.has(toastId)) {\n    return\n  }\n\n  const timeout = setTimeout(() => {\n    toastTimeouts.delete(toastId)\n    dispatch({\n      type: \"REMOVE_TOAST\",\n      toastId: toastId,\n    })\n  }, TOAST_REMOVE_DELAY)\n\n  toastTimeouts.set(toastId, timeout)\n}\n\nexport const reducer = (state: State, action: Action): State => {\n  switch (action.type) {\n    case \"ADD_TOAST\":\n      return {\n        ...state,\n        toasts: [action.toast, ...state.toasts].slice(0, TOAST_LIMIT),\n      }\n\n    case \"UPDATE_TOAST\":\n      return {\n        ...state,\n        toasts: state.toasts.map((t) =>\n          t.id === action.toast.id ? { ...t, ...action.toast } : t\n        ),\n      }\n\n    case \"DISMISS_TOAST\": {\n      const { toastId } = action\n\n      // ! Side effects ! - This could be extracted into a dismissToast() action,\n      // but I'll keep it here for simplicity\n      if (toastId) {\n        addToRemoveQueue(toastId)\n      } else {\n        state.toasts.forEach((toast) => {\n          addToRemoveQueue(toast.id)\n        })\n      }\n\n      return {\n        ...state,\n        toasts: state.toasts.map((t) =>\n          t.id === toastId || toastId === undefined\n            ? {\n                ...t,\n                open: false,\n              }\n            : t\n        ),\n      }\n    }\n    case \"REMOVE_TOAST\":\n      if (action.toastId === undefined) {\n        return {\n          ...state,\n          toasts: [],\n        }\n      }\n      return {\n        ...state,\n        toasts: state.toasts.filter((t) => t.id !== action.toastId),\n      }\n  }\n}\n\nconst listeners: Array<(state: State) => void> = []\n\nlet memoryState: State = { toasts: [] }\n\nfunction dispatch(action: Action) {\n  memoryState = reducer(memoryState, action)\n  listeners.forEach((listener) => {\n    listener(memoryState)\n  })\n}\n\ntype Toast = Omit<ToasterToast, \"id\">\n\nfunction toast({ ...props }: Toast) {\n  const id = genId()\n\n  const update = (props: ToasterToast) =>\n    dispatch({\n      type: \"UPDATE_TOAST\",\n      toast: { ...props, id },\n    })\n  const dismiss = () => dispatch({ type: \"DISMISS_TOAST\", toastId: id })\n\n  dispatch({\n    type: \"ADD_TOAST\",\n    toast: {\n      ...props,\n      id,\n      open: true,\n      onOpenChange: (open) => {\n        if (!open) dismiss()\n      },\n    },\n  })\n\n  return {\n    id: id,\n    dismiss,\n    update,\n  }\n}\n\nfunction useToast() {\n  const [state, setState] = React.useState<State>(memoryState)\n\n  React.useEffect(() => {\n    listeners.push(setState)\n    return () => {\n      const index = listeners.indexOf(setState)\n      if (index > -1) {\n        listeners.splice(index, 1)\n      }\n    }\n  }, [state])\n\n  return {\n    ...state,\n    toast,\n    dismiss: (toastId?: string) => dispatch({ type: \"DISMISS_TOAST\", toastId }),\n  }\n}\n\nexport { useToast, toast }\n"],"names":[],"mappings":";;;;;AAEA,sCAAsC;AACtC;;AAHA;;AAUA,MAAM,cAAc;AACpB,MAAM,qBAAqB;AAS3B,MAAM,cAAc;IAClB,WAAW;IACX,cAAc;IACd,eAAe;IACf,cAAc;AAChB;AAEA,IAAI,QAAQ;AAEZ,SAAS;IACP,QAAQ,CAAC,QAAQ,CAAC,IAAI,OAAO,gBAAgB;IAC7C,OAAO,MAAM,QAAQ;AACvB;AA0BA,MAAM,gBAAgB,IAAI;AAE1B,MAAM,mBAAmB,CAAC;IACxB,IAAI,cAAc,GAAG,CAAC,UAAU;QAC9B;IACF;IAEA,MAAM,UAAU,WAAW;QACzB,cAAc,MAAM,CAAC;QACrB,SAAS;YACP,MAAM;YACN,SAAS;QACX;IACF,GAAG;IAEH,cAAc,GAAG,CAAC,SAAS;AAC7B;AAEO,MAAM,UAAU,CAAC,OAAc;IACpC,OAAQ,OAAO,IAAI;QACjB,KAAK;YACH,OAAO;gBACL,GAAG,KAAK;gBACR,QAAQ;oBAAC,OAAO,KAAK;uBAAK,MAAM,MAAM;iBAAC,CAAC,KAAK,CAAC,GAAG;YACnD;QAEF,KAAK;YACH,OAAO;gBACL,GAAG,KAAK;gBACR,QAAQ,MAAM,MAAM,CAAC,GAAG,CAAC,CAAC,IACxB,EAAE,EAAE,KAAK,OAAO,KAAK,CAAC,EAAE,GAAG;wBAAE,GAAG,CAAC;wBAAE,GAAG,OAAO,KAAK;oBAAC,IAAI;YAE3D;QAEF,KAAK;YAAiB;gBACpB,MAAM,EAAE,OAAO,EAAE,GAAG;gBAEpB,2EAA2E;gBAC3E,uCAAuC;gBACvC,IAAI,SAAS;oBACX,iBAAiB;gBACnB,OAAO;oBACL,MAAM,MAAM,CAAC,OAAO,CAAC,CAAC;wBACpB,iBAAiB,MAAM,EAAE;oBAC3B;gBACF;gBAEA,OAAO;oBACL,GAAG,KAAK;oBACR,QAAQ,MAAM,MAAM,CAAC,GAAG,CAAC,CAAC,IACxB,EAAE,EAAE,KAAK,WAAW,YAAY,YAC5B;4BACE,GAAG,CAAC;4BACJ,MAAM;wBACR,IACA;gBAER;YACF;QACA,KAAK;YACH,IAAI,OAAO,OAAO,KAAK,WAAW;gBAChC,OAAO;oBACL,GAAG,KAAK;oBACR,QAAQ,EAAE;gBACZ;YACF;YACA,OAAO;gBACL,GAAG,KAAK;gBACR,QAAQ,MAAM,MAAM,CAAC,MAAM,CAAC,CAAC,IAAM,EAAE,EAAE,KAAK,OAAO,OAAO;YAC5D;IACJ;AACF;AAEA,MAAM,YAA2C,EAAE;AAEnD,IAAI,cAAqB;IAAE,QAAQ,EAAE;AAAC;AAEtC,SAAS,SAAS,MAAc;IAC9B,cAAc,QAAQ,aAAa;IACnC,UAAU,OAAO,CAAC,CAAC;QACjB,SAAS;IACX;AACF;AAIA,SAAS,MAAM,EAAE,GAAG,OAAc;IAChC,MAAM,KAAK;IAEX,MAAM,SAAS,CAAC,QACd,SAAS;YACP,MAAM;YACN,OAAO;gBAAE,GAAG,KAAK;gBAAE;YAAG;QACxB;IACF,MAAM,UAAU,IAAM,SAAS;YAAE,MAAM;YAAiB,SAAS;QAAG;IAEpE,SAAS;QACP,MAAM;QACN,OAAO;YACL,GAAG,KAAK;YACR;YACA,MAAM;YACN,cAAc,CAAC;gBACb,IAAI,CAAC,MAAM;YACb;QACF;IACF;IAEA,OAAO;QACL,IAAI;QACJ;QACA;IACF;AACF;AAEA,SAAS;;IACP,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAc,AAAD,EAAS;IAEhD,CAAA,GAAA,6JAAA,CAAA,YAAe,AAAD;8BAAE;YACd,UAAU,IAAI,CAAC;YACf;sCAAO;oBACL,MAAM,QAAQ,UAAU,OAAO,CAAC;oBAChC,IAAI,QAAQ,CAAC,GAAG;wBACd,UAAU,MAAM,CAAC,OAAO;oBAC1B;gBACF;;QACF;6BAAG;QAAC;KAAM;IAEV,OAAO;QACL,GAAG,KAAK;QACR;QACA,SAAS,CAAC,UAAqB,SAAS;gBAAE,MAAM;gBAAiB;YAAQ;IAC3E;AACF;GAlBS","debugId":null}},
    {"offset": {"line": 173, "column": 0}, "map": {"version":3,"sources":["file:///home/ubuntu/stish/src/lib/utils.ts"],"sourcesContent":["import { clsx, type ClassValue } from \"clsx\"\nimport { twMerge } from \"tailwind-merge\"\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs))\n}\n"],"names":[],"mappings":";;;AAAA;AACA;;;AAEO,SAAS,GAAG,GAAG,MAAoB;IACxC,OAAO,CAAA,GAAA,8JAAA,CAAA,UAAO,AAAD,EAAE,CAAA,GAAA,wIAAA,CAAA,OAAI,AAAD,EAAE;AACtB","debugId":null}},
    {"offset": {"line": 192, "column": 0}, "map": {"version":3,"sources":["file:///home/ubuntu/stish/src/components/ui/toast.tsx"],"sourcesContent":["\n\"use client\"\n\nimport * as React from \"react\"\nimport * as ToastPrimitives from \"@radix-ui/react-toast\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ToastProvider = ToastPrimitives.Provider\n\nconst ToastViewport = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Viewport>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Viewport>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Viewport\n    ref={ref}\n    className={cn(\n      \"fixed top-0 z-[100] flex max-h-screen w-full flex-col-reverse p-4 sm:bottom-0 sm:right-0 sm:top-auto sm:flex-col md:max-w-[420px]\",\n      className\n    )}\n    {...props}\n  />\n))\nToastViewport.displayName = ToastPrimitives.Viewport.displayName\n\nconst toastVariants = cva(\n  \"group pointer-events-auto relative flex w-full items-center justify-between space-x-4 overflow-hidden rounded-md border p-6 pr-8 shadow-lg transition-all data-[swipe=cancel]:translate-x-0 data-[swipe=end]:translate-x-[var(--radix-toast-swipe-end-x)] data-[swipe=move]:translate-x-[var(--radix-toast-swipe-move-x)] data-[swipe=move]:transition-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[swipe=end]:animate-out data-[state=closed]:fade-out-80 data-[state=closed]:slide-out-to-right-full data-[state=open]:slide-in-from-top-full data-[state=open]:sm:slide-in-from-bottom-full\",\n  {\n    variants: {\n      variant: {\n        default: \"border bg-background/90 text-foreground\", // Added /90 for transparency\n        destructive:\n          \"destructive group border-destructive bg-destructive/90 text-destructive-foreground\", // Added /90 for transparency\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nconst Toast = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Root>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Root> &\n    VariantProps<typeof toastVariants>\n>(({ className, variant, ...props }, ref) => {\n  return (\n    <ToastPrimitives.Root\n      ref={ref}\n      className={cn(toastVariants({ variant }), className)}\n      {...props}\n    />\n  )\n})\nToast.displayName = ToastPrimitives.Root.displayName\n\nconst ToastAction = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Action>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Action>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Action\n    ref={ref}\n    className={cn(\n      \"inline-flex h-8 shrink-0 items-center justify-center rounded-md border bg-transparent px-3 text-sm font-medium ring-offset-background transition-colors hover:bg-secondary focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 group-[.destructive]:border-muted/40 group-[.destructive]:hover:border-destructive/30 group-[.destructive]:hover:bg-destructive group-[.destructive]:hover:text-destructive-foreground group-[.destructive]:focus:ring-destructive\",\n      className\n    )}\n    {...props}\n  />\n))\nToastAction.displayName = ToastPrimitives.Action.displayName\n\nconst ToastClose = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Close>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Close>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Close\n    ref={ref}\n    className={cn(\n      \"absolute right-2 top-2 rounded-md p-1 text-foreground/50 opacity-0 transition-opacity hover:text-foreground focus:opacity-100 focus:outline-none focus:ring-2 group-hover:opacity-100 group-[.destructive]:text-red-300 group-[.destructive]:hover:text-red-50 group-[.destructive]:focus:ring-red-400 group-[.destructive]:focus:ring-offset-red-600\",\n      className\n    )}\n    toast-close=\"\"\n    {...props}\n  >\n    <X className=\"h-4 w-4\" />\n  </ToastPrimitives.Close>\n))\nToastClose.displayName = ToastPrimitives.Close.displayName\n\nconst ToastTitle = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Title>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Title>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Title\n    ref={ref}\n    className={cn(\"text-sm font-semibold\", className)}\n    {...props}\n  />\n))\nToastTitle.displayName = ToastPrimitives.Title.displayName\n\nconst ToastDescription = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Description>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Description>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Description\n    ref={ref}\n    className={cn(\"text-sm opacity-90\", className)}\n    {...props}\n  />\n))\nToastDescription.displayName = ToastPrimitives.Description.displayName\n\ntype ToastProps = React.ComponentPropsWithoutRef<typeof Toast>\n\ntype ToastActionElement = React.ReactElement<typeof ToastAction>\n\nexport {\n  type ToastProps,\n  type ToastActionElement,\n  ToastProvider,\n  ToastViewport,\n  Toast,\n  ToastTitle,\n  ToastDescription,\n  ToastClose,\n  ToastAction,\n}\n"],"names":[],"mappings":";;;;;;;;;;AAGA;AACA;AACA;AACA;AAEA;AAPA;;;;;;;AASA,MAAM,gBAAgB,oKAAA,CAAA,WAAwB;AAE9C,MAAM,8BAAgB,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAGnC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,oKAAA,CAAA,WAAwB;QACvB,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,qIACA;QAED,GAAG,KAAK;;;;;;;AAGb,cAAc,WAAW,GAAG,oKAAA,CAAA,WAAwB,CAAC,WAAW;AAEhE,MAAM,gBAAgB,CAAA,GAAA,mKAAA,CAAA,MAAG,AAAD,EACtB,6lBACA;IACE,UAAU;QACR,SAAS;YACP,SAAS;YACT,aACE;QACJ;IACF;IACA,iBAAiB;QACf,SAAS;IACX;AACF;AAGF,MAAM,sBAAQ,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAI3B,CAAC,EAAE,SAAS,EAAE,OAAO,EAAE,GAAG,OAAO,EAAE;IACnC,qBACE,6LAAC,oKAAA,CAAA,OAAoB;QACnB,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,cAAc;YAAE;QAAQ,IAAI;QACzC,GAAG,KAAK;;;;;;AAGf;;AACA,MAAM,WAAW,GAAG,oKAAA,CAAA,OAAoB,CAAC,WAAW;AAEpD,MAAM,4BAAc,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,oKAAA,CAAA,SAAsB;QACrB,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,sgBACA;QAED,GAAG,KAAK;;;;;;;AAGb,YAAY,WAAW,GAAG,oKAAA,CAAA,SAAsB,CAAC,WAAW;AAE5D,MAAM,2BAAa,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,oKAAA,CAAA,QAAqB;QACpB,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,yVACA;QAEF,eAAY;QACX,GAAG,KAAK;kBAET,cAAA,6LAAC,+LAAA,CAAA,IAAC;YAAC,WAAU;;;;;;;;;;;;AAGjB,WAAW,WAAW,GAAG,oKAAA,CAAA,QAAqB,CAAC,WAAW;AAE1D,MAAM,2BAAa,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,oKAAA,CAAA,QAAqB;QACpB,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,yBAAyB;QACtC,GAAG,KAAK;;;;;;;AAGb,WAAW,WAAW,GAAG,oKAAA,CAAA,QAAqB,CAAC,WAAW;AAE1D,MAAM,iCAAmB,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,SAGtC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,oKAAA,CAAA,cAA2B;QAC1B,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,sBAAsB;QACnC,GAAG,KAAK;;;;;;;AAGb,iBAAiB,WAAW,GAAG,oKAAA,CAAA,cAA2B,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 327, "column": 0}, "map": {"version":3,"sources":["file:///home/ubuntu/stish/src/components/ui/toaster.tsx"],"sourcesContent":["\"use client\"\n\nimport { useToast } from \"@/hooks/use-toast\"\nimport {\n  Toast,\n  ToastClose,\n  ToastDescription,\n  ToastProvider,\n  ToastTitle,\n  ToastViewport,\n} from \"@/components/ui/toast\"\n\nexport function Toaster() {\n  const { toasts } = useToast()\n\n  return (\n    <ToastProvider>\n      {toasts.map(function ({ id, title, description, action, ...props }) {\n        return (\n          <Toast key={id} {...props}>\n            <div className=\"grid gap-1\">\n              {title && <ToastTitle>{title}</ToastTitle>}\n              {description && (\n                <ToastDescription>{description}</ToastDescription>\n              )}\n            </div>\n            {action}\n            <ToastClose />\n          </Toast>\n        )\n      })}\n      <ToastViewport />\n    </ToastProvider>\n  )\n}\n"],"names":[],"mappings":";;;;AAEA;AACA;;;AAHA;;;AAYO,SAAS;;IACd,MAAM,EAAE,MAAM,EAAE,GAAG,CAAA,GAAA,+HAAA,CAAA,WAAQ,AAAD;IAE1B,qBACE,6LAAC,oIAAA,CAAA,gBAAa;;YACX,OAAO,GAAG,CAAC,SAAU,EAAE,EAAE,EAAE,KAAK,EAAE,WAAW,EAAE,MAAM,EAAE,GAAG,OAAO;gBAChE,qBACE,6LAAC,oIAAA,CAAA,QAAK;oBAAW,GAAG,KAAK;;sCACvB,6LAAC;4BAAI,WAAU;;gCACZ,uBAAS,6LAAC,oIAAA,CAAA,aAAU;8CAAE;;;;;;gCACtB,6BACC,6LAAC,oIAAA,CAAA,mBAAgB;8CAAE;;;;;;;;;;;;wBAGtB;sCACD,6LAAC,oIAAA,CAAA,aAAU;;;;;;mBARD;;;;;YAWhB;0BACA,6LAAC,oIAAA,CAAA,gBAAa;;;;;;;;;;;AAGpB;GAtBgB;;QACK,+HAAA,CAAA,WAAQ;;;KADb","debugId":null}},
    {"offset": {"line": 412, "column": 0}, "map": {"version":3,"sources":["file:///home/ubuntu/stish/src/contexts/AuthContext.tsx"],"sourcesContent":["\n/* eslint-disable */\n\"use client\";\nimport type { ReactNode } from 'react';\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport { useRouter, usePathname } from 'next/navigation';\n\ninterface AuthContextType {\n  isAuthenticated: boolean;\n  login: (user: string, pass: string) => Promise<boolean>;\n  logout: () => void;\n  isLoading: boolean;\n}\n\nconst AuthContext = createContext<AuthContextType | undefined>(undefined);\n\n// Hardcoded credentials for demo purposes\nconst ADMIN_USER = \"admin\";\nconst ADMIN_PASS = \"admin123\"; // Updated password\n\nexport const AuthProvider: React.FC<{ children: ReactNode }> = ({ children }) => {\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [isLoading, setIsLoading] = useState(true);\n  const router = useRouter();\n  const pathname = usePathname();\n\n  useEffect(() => {\n    const storedAuth = localStorage.getItem('stish_auth');\n    if (storedAuth === 'true') {\n      setIsAuthenticated(true);\n    }\n    setIsLoading(false);\n  }, []);\n\n  useEffect(() => {\n    if (!isLoading && isAuthenticated && pathname === '/admin/login') {\n      router.replace('/admin/dashboard'); \n    }\n  }, [isAuthenticated, isLoading, pathname, router]);\n\n  const login = async (user: string, pass: string): Promise<boolean> => {\n    setIsLoading(true);\n    // Simulate API call\n    await new Promise(resolve => setTimeout(resolve, 500));\n    if (user === ADMIN_USER && pass === ADMIN_PASS) {\n      localStorage.setItem('stish_auth', 'true');\n      setIsAuthenticated(true);\n      setIsLoading(false);\n      router.replace('/admin/dashboard'); \n      return true;\n    }\n    setIsAuthenticated(false);\n    setIsLoading(false);\n    return false;\n  };\n\n  const logout = () => {\n    localStorage.removeItem('stish_auth');\n    setIsAuthenticated(false);\n    router.replace('/admin/login'); \n  };\n\n  return (\n    <AuthContext.Provider value={{ isAuthenticated, login, logout, isLoading }}>\n      {children}\n    </AuthContext.Provider>\n  );\n};\n\nexport const useAuth = (): AuthContextType => {\n  const context = useContext(AuthContext);\n  if (context === undefined) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n"],"names":[],"mappings":"AACA,kBAAkB;;;;;AAGlB;AACA;;;AAHA;;;AAYA,MAAM,4BAAc,CAAA,GAAA,6JAAA,CAAA,gBAAa,AAAD,EAA+B;AAE/D,0CAA0C;AAC1C,MAAM,aAAa;AACnB,MAAM,aAAa,YAAY,mBAAmB;AAE3C,MAAM,eAAkD,CAAC,EAAE,QAAQ,EAAE;;IAC1E,MAAM,CAAC,iBAAiB,mBAAmB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IACvD,MAAM,CAAC,WAAW,aAAa,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAC3C,MAAM,SAAS,CAAA,GAAA,qIAAA,CAAA,YAAS,AAAD;IACvB,MAAM,WAAW,CAAA,GAAA,qIAAA,CAAA,cAAW,AAAD;IAE3B,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;kCAAE;YACR,MAAM,aAAa,aAAa,OAAO,CAAC;YACxC,IAAI,eAAe,QAAQ;gBACzB,mBAAmB;YACrB;YACA,aAAa;QACf;iCAAG,EAAE;IAEL,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;kCAAE;YACR,IAAI,CAAC,aAAa,mBAAmB,aAAa,gBAAgB;gBAChE,OAAO,OAAO,CAAC;YACjB;QACF;iCAAG;QAAC;QAAiB;QAAW;QAAU;KAAO;IAEjD,MAAM,QAAQ,OAAO,MAAc;QACjC,aAAa;QACb,oBAAoB;QACpB,MAAM,IAAI,QAAQ,CAAA,UAAW,WAAW,SAAS;QACjD,IAAI,SAAS,cAAc,SAAS,YAAY;YAC9C,aAAa,OAAO,CAAC,cAAc;YACnC,mBAAmB;YACnB,aAAa;YACb,OAAO,OAAO,CAAC;YACf,OAAO;QACT;QACA,mBAAmB;QACnB,aAAa;QACb,OAAO;IACT;IAEA,MAAM,SAAS;QACb,aAAa,UAAU,CAAC;QACxB,mBAAmB;QACnB,OAAO,OAAO,CAAC;IACjB;IAEA,qBACE,6LAAC,YAAY,QAAQ;QAAC,OAAO;YAAE;YAAiB;YAAO;YAAQ;QAAU;kBACtE;;;;;;AAGP;GA/Ca;;QAGI,qIAAA,CAAA,YAAS;QACP,qIAAA,CAAA,cAAW;;;KAJjB;AAiDN,MAAM,UAAU;;IACrB,MAAM,UAAU,CAAA,GAAA,6JAAA,CAAA,aAAU,AAAD,EAAE;IAC3B,IAAI,YAAY,WAAW;QACzB,MAAM,IAAI,MAAM;IAClB;IACA,OAAO;AACT;IANa","debugId":null}},
    {"offset": {"line": 516, "column": 0}, "map": {"version":3,"sources":["file:///home/ubuntu/stish/src/contexts/LogContext.tsx"],"sourcesContent":["\n\"use client\";\nimport type { ReactNode } from 'react';\nimport React, { createContext, useContext, useState, useEffect, useCallback } from 'react';\nimport type { LogEntry, LocationData, CameraData } from '@/types';\nimport { useToast } from '@/hooks/use-toast';\nimport { openDB, addLogToDB, getLogsFromDB, clearLogsFromDB } from '@/lib/idb'; // StishDB optional\n\ninterface LogContextType {\n  logs: LogEntry[];\n  addLog: (log: Omit<LogEntry, 'id' | 'timestamp' | 'ip' | 'userAgent'>) => Promise<void>;\n  clearLogs: () => void;\n  isLoading: boolean;\n}\n\nconst LogContext = createContext<LogContextType | undefined>(undefined);\n\nasync function getPublicIP(): Promise<string> {\n  try {\n    const response = await fetch('https://api.ipify.org?format=json');\n    if (!response.ok) {\n      console.error(\"Failed to fetch IP, status:\", response.status);\n      return \"IP Not Found (Fetch Error)\";\n    }\n    const data = await response.json();\n    return data.ip || \"IP Not Found (API)\";\n  } catch (error) {\n    console.error(\"Error fetching IP:\", error);\n    return \"IP Not Found (Catch)\";\n  }\n}\n\nasync function getGeoInfo(ip: string): Promise<{ city?: string; country?: string }> {\n  if (ip.startsWith(\"IP Not Found\") || ip === \"127.0.0.1\" || ip === \"localhost\") {\n    return { city: \"Local\", country: \"N/A\" };\n  }\n  try {\n    const response = await fetch(`https://ip-api.com/json/${ip}?fields=status,message,country,city`);\n    if (!response.ok) return {};\n    const data = await response.json();\n    if (data.status === 'success') {\n      return { city: data.city, country: data.country };\n    }\n  } catch (error) {\n    console.error(\"Error fetching geo info:\", error);\n  }\n  return {};\n}\n\n\nimport { useRef } from 'react'; // Import useRef\n\nexport const LogProvider: React.FC<{ children: ReactNode }> = ({ children }) => {\n  const [logs, setLogs] = useState<LogEntry[]>([]);\n  // const [isLoading, setIsLoading] = useState(true); // Commented out\n  const [isLoading, setIsLoading] = useState(false); // isLoading is now always false\n  // const [db, setDb] = useState<IDBDatabase | null>(null); // Commented out\n  // const { toast } = useToast(); // Keep toast if needed for other things, or remove if not used at all\n\n  // const dbReadyPromiseResolverRef = useRef<{ resolve: (db: IDBDatabase) => void; reject: (error: any) => void; } | null>(null); // Commented out\n  // const dbReadyPromiseRef = useRef<Promise<IDBDatabase>>( // Commented out\n  //   new Promise((resolve, reject) => {\n  //     dbReadyPromiseResolverRef.current = { resolve, reject };\n  //   })\n  // );\n\n  // useEffect(() => { // Commented out entire useEffect for initializeAndLoadLogs\n  //   const initializeAndLoadLogs = async () => {\n  //     if (typeof window === 'undefined') {\n  //       setIsLoading(false);\n  //       return;\n  //     }\n  //     setIsLoading(true);\n  //     let database: IDBDatabase | null = null;\n\n  //     try {\n  //       database = await openDB();\n  //       setDb(database); // Set db state immediately after successful open\n  //       dbReadyPromiseResolverRef.current?.resolve(database);\n\n  //       const loadedLogs = await getLogsFromDB(database);\n  //       setLogs(loadedLogs);\n\n  //     } catch (error) {\n  //       console.error(\"Failed to initialize database or load logs:\", error);\n  //       dbReadyPromiseResolverRef.current?.reject(error); // Reject promise on any error in this block\n  //       if (!database) { // Error likely happened in openDB\n  //         toast({\n  //           title: \"Database Error\",\n  //           description: \"Could not initialize local database. Logs will not be saved or loaded.\",\n  //           variant: \"destructive\",\n  //         });\n  //       } else { // Error likely happened in getLogsFromDB\n  //         toast({\n  //           title: \"Error Loading Logs\",\n  //           description: \"Could not retrieve initial logs from the database.\",\n  //           variant: \"destructive\",\n  //         });\n  //       }\n  //       // setLogs([]); // Optionally clear logs if loading fails catastrophically\n  //     } finally {\n  //       setIsLoading(false);\n  //     }\n  //   };\n\n  //   initializeAndLoadLogs();\n  // }, [toast]);\n\n  const addLog = useCallback(async (logData: Omit<LogEntry, 'id' | 'timestamp' | 'ip' | 'userAgent'>) => {\n    // Simplified newLog for testing\n    const newLog: LogEntry = {\n      id: crypto.randomUUID(),\n      type: 'TEST' as any, // Cast to any if 'TEST' is not a valid LogEntry['type']\n      timestamp: new Date().toISOString(),\n      ip: 'N/A',\n      userAgent: 'N/A',\n      data: { message: 'Test Log ' + Date.now() }\n    };\n\n    setLogs(prevLogs => [newLog, ...prevLogs]);\n\n    // Commented out asynchronous background save\n    // (async () => {\n    //   try {\n    //     const dbInstance = db || await dbReadyPromiseRef.current;\n    //     if (!db && dbInstance) {\n    //       setDb(dbInstance); // Keep db state in sync if promise was awaited\n    //     }\n    //     await addLogToDB(dbInstance, newLog);\n    //   } catch (error) {\n    //     console.error(\"Failed to save log to IndexedDB in background:\", error);\n    //     // Optional: Consider a toast notification for the user if background save fails\n    //     // toast({\n    //     //   title: \"Background Save Error\",\n    //     //   description: \"A log was added to the view but failed to save persistently.\",\n    //     //   variant: \"warning\", // Or \"destructive\" if critical\n    //     // });\n    //   }\n    // })();\n\n  }, []); // Dependencies are empty now as db, setDb are removed\n\n  const clearLogs = async () => { // Made it async to match interface, but body is sync\n    setLogs([]); // Clear local state only\n    // Commented out DB interaction\n    // let currentDbInstance: IDBDatabase;\n    // try {\n    //   currentDbInstance = db || await dbReadyPromiseRef.current;\n    //   if (!db && currentDbInstance) {\n    //     setDb(currentDbInstance); // Keep db state in sync\n    //   }\n    // } catch (error) {\n    //   console.error(\"Database initialization failed or still pending for clearLogs:\", error);\n    //   toast({\n    //     title: \"Database Error\",\n    //     description: \"Database not available. Logs could not be cleared.\",\n    //     variant: \"destructive\",\n    //   });\n    //   return;\n    // }\n    // try {\n    //   await clearLogsFromDB(currentDbInstance);\n    //   toast({\n    //     title: \"Logs Cleared\",\n    //     description: \"All captured data has been deleted from IndexedDB.\",\n    //   });\n    // } catch (error) {\n    //   console.error(\"Failed to clear logs from DB:\", error);\n    //   toast({\n    //     title: \"Clearing Error\",\n    //     description: \"Failed to clear logs from the database.\",\n    //     variant: \"destructive\",\n    //   });\n    // }\n  };\n\n  return (\n    <LogContext.Provider value={{ logs, addLog, clearLogs, isLoading }}>\n      {children}\n    </LogContext.Provider>\n  );\n};\n\nexport const useLogs = (): LogContextType => {\n  const context = useContext(LogContext);\n  if (context === undefined) {\n    throw new Error('useLogs must be used within a LogProvider');\n  }\n  return context;\n};\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 721, "column": 0}, "map": {"version":3,"sources":["file:///home/ubuntu/stish/src/components/Providers.tsx"],"sourcesContent":["\"use client\";\nimport type { ReactNode } from 'react';\nimport { AuthProvider } from '@/contexts/AuthContext';\nimport { LogProvider } from '@/contexts/LogContext';\n\nexport const AppProviders: React.FC<{ children: ReactNode }> = ({ children }) => {\n  return (\n    <AuthProvider>\n      <LogProvider>\n        {children}\n      </LogProvider>\n    </AuthProvider>\n  );\n};\n"],"names":[],"mappings":";;;;AAEA;AACA;AAHA;;;;AAKO,MAAM,eAAkD,CAAC,EAAE,QAAQ,EAAE;IAC1E,qBACE,6LAAC,kIAAA,CAAA,eAAY;kBACX,cAAA,6LAAC,iIAAA,CAAA,cAAW;sBACT;;;;;;;;;;;AAIT;KARa","debugId":null}}]
}